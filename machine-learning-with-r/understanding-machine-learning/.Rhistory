x<-c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
y<-c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
expand.grid(x,y)
for(j in awayScores){
dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
newScore<-c(1,10)
newScore
newScore<-1:10
newScore
for(j in awayScores)){
dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
for(i in homeScores){
for(j in awayScores)){}
for(i in homeScores){
for(j in awayScores)){
dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
}
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
for(i in homeScores){
for(j in awayScores)){
dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
}
homeScores
x<-c(0:15)
x
str(x)
str(homeScores)
for(t in 1:10){}
t
for(i in c(0:15)){dpois(i,1.5)}
for(i in c(0:15)){dpois(i,1.5)}
x<-for(i in c(0:15)){dpois(i,1.5)}
x
a<-vector()
a<-c(a,1:15)
a
a<-vector()
x<-for(i in c(0:15)){a[i]=dpois(i,1.5)}
a
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
correctScores<-vector()
for(i in homeScores){
for(j in awayScores)){
correctScores[i]=dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
}
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
correctScores<-vector()
for(i in homeScores){
for(j in awayScores)){
correctScores[i][j]=dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
}
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
correctScores<-vector()
for(i in homeScores){
for(j in awayScores)){
}
}
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
correctScores<-vector()
for(i in homeScores){dpois(i,homeExpectedGoals)}
homeExpectedGoals<-1.5
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
correctScores<-vector()
for(i in homeScores){correctScores[i] =dpois(i,homeExpectedGoals)}
homeExpectedGoals<-1.6
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
correctScores<-vector()
for(i in homeScores){correctScores[i] =dpois(i,homeExpectedGoals)}
correctScoreMatrix = matrix(nrow =15, ncol =15)
for(i in homeScores){
for(j in awayScores){
correctScoreMatrix[i,j]=dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
}
homeExpectedGoals<-1.6
awayExpectedGoals<-1.1
homeScores<-0:15
awayScores<-0:15
for(i in homeScores){
for(j in awayScores){
correctScoreMatrix[i,j]=dpois(i,homeExpectedGoals)*dpois(j,awayExpectedGoals)
}
}
correctScoreMatrix
devtools::install_git("https://gitlab.com/dashee87/footballR.git")
library("footballR")
install.packages("devtools")
library(footballR)
install.packages("footballR")
library(skellam)
supremacy<-3
totalCorners<-10
homeExpectedCorners<-totalCorners/2+supremacy/2
awayExpectedCorners<-totalCorners-homeExpectedCorners
skellam::dskellam(2,homeExpectedCorners,awayExpectedCorners)
homeWinProbability<-0
for(score in 1:20){
probability<-skellam::dskellam(score,homeExpectedCorners,awayExpectedCorners)
homeWinProbability<-homeWinProbability+probability
}
1/0.78689
homeWinProbability<-0
for(score in 2:20){
probability<-skellam::dskellam(score,homeExpectedCorners,awayExpectedCorners)
homeWinProbability<-homeWinProbability+probability
}
1/homeWinProbability
homeWinProbability * 1.4
(1/homeWinProbability) * 1.4
getwd()
list.files()
setwd("/Users/leeand/dev")
list.files()
setwd("/Users/leeand/dev/machine-learning")
list.files()
setwd("/Users/leeand/dev/machine-learning/machine-learning-with-r")
setwd("/Users/leeand/dev/machine-learning/machine-learning-with-r/understanding-machine-learning")
list.files()
source('~/.active-rstudio-document', echo=TRUE)
View(origData)
source('~/.active-rstudio-document', echo=TRUE)
nRow(origData)
nrow(origData)
head(origData)
source('~/.active-rstudio-document', echo=TRUE)
View(origData)
cor(origData[c("ORIGIN_AIRPORT_SEQ_ID","ORIGIN_AIRPORT_ID")])
mismatched<-origData[origData$CARRIER != origData$UNIQUE_CARRIER,]
nrow(mismatched) #should be zero
origData$UNIQUE_CARRIER<-NULL
head(origData,2)
getwd()
source('~/dev/machine-learning/machine-learning-with-r/understanding-machine-learning/FilteringAirportData.R')
